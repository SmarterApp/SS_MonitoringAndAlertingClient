/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.mna.client.aop;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * This class is used as an aspect to provide around advice for persistence methods.
 * It is also a Spring component.
 */
@Component
@Aspect
public class PersistenceLoggingAspect extends LoggingAspect {

    /**
     * Logger
     */
    private static final Logger PERFORMANCE_PERSISTENCE_LOGGER = LoggerFactory.getLogger("PERFORMANCE_PERSISTENCE");

    /**
     * Logging advice class to provide the actual advice implementation
     */
    @Autowired
    private LoggingAdvice loggingAdvice;

    /**
     * Run the advice to log a performance metric around persistence methods.
     * 
     * @param pjp
     * @return
     * @throws Throwable
     */
    @Around("persistenceMethods()")
    public Object performanceLog(final ProceedingJoinPoint pjp) throws Throwable {
        return loggingAdvice.timeMethod(pjp, PERFORMANCE_PERSISTENCE_LOGGER);
    }

}
