/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.mna.client.domain;

import java.io.Serializable;

import org.joda.time.DateTime;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Base domain object that contains common fields for objects being sent through the client
 */
public class MnaBase implements Serializable {

    /**
     */
    private static final long serialVersionUID = 320720611263229208L;

    protected MAAlternateKey alternateKey;

    protected String severity;
    protected DateTime insertTimestamp;

    protected String message;

    private static final int SB_SIZE = 80;

    protected String id; // NOPMD

    public MnaBase() {
        this.alternateKey = new MAAlternateKey();
    }

    public MnaBase(final String aserver, final String anode, final String acomponent) {
        this.alternateKey = new MAAlternateKey(aserver, anode, acomponent);
    }

    @JsonIgnore
    public String getServer() {
        return alternateKey.getServer();
    }

    public void setServer(final String inServer) {
        this.alternateKey.setServer(inServer);
    }

    @JsonIgnore
    public String getNode() {
        return alternateKey.getNode();
    }

    public void setNode(final String anode) {
        this.alternateKey.setNode(anode);
    }

    public DateTime getInsertTimestamp() {
        return insertTimestamp;
    }

    public void setInsertTimestamp(final DateTime ainsertTimestamp) {
        this.insertTimestamp = ainsertTimestamp;
    }

    @JsonIgnore
    public String getComponent() {
        return this.alternateKey.getComponent();
    }

    public void setComponent(final String inComponent) {
        this.alternateKey.setComponent(inComponent);
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(final String amessage) {
        this.message = amessage;
    }

    public String getId() {
        return id;
    }

    public void setId(final String inId) {
        this.id = inId;
    }

    public String getSeverity() {
        return severity;
    }

    public void setSeverity(final String inSeverity) {
        this.severity = inSeverity;
    }

    public MAAlternateKey getAlternateKey() {
        return alternateKey;
    }

    public void setAlternateKey(final MAAlternateKey inAlternateKey) {
        this.alternateKey = inAlternateKey;
    }

    @Override
    public String toString() {

        StringBuilder sbuilder = new StringBuilder(SB_SIZE);
        sbuilder.append("MnaBase [id: ");
        sbuilder.append(id);
        sbuilder.append(", alternateKey: ");
        sbuilder.append(alternateKey);
        sbuilder.append(", severity: ");
        sbuilder.append(severity);
        sbuilder.append(", message: ");
        sbuilder.append(message);
        sbuilder.append(", insertTimestamp: ");
        sbuilder.append(insertTimestamp);
        sbuilder.append(']');

        return sbuilder.toString();
    }

}
