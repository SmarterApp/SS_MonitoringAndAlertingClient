/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.mna.client.listener;

import java.util.Arrays;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.support.BeanDefinitionRegistry;
import org.springframework.beans.factory.xml.XmlBeanDefinitionReader;
import org.springframework.context.ApplicationContextInitializer;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.core.Ordered;
import org.springframework.core.io.ClassPathResource;
import org.springframework.web.context.ConfigurableWebApplicationContext;
import org.springframework.web.context.support.XmlWebApplicationContext;

/**
 * This class is used to bootstrap the M&A client spring configuration.
 */
public class ClientSpringConfigurator implements ApplicationContextInitializer<ConfigurableApplicationContext>, Ordered {

    /**
     * Logger
     */
    @SuppressWarnings("unused")
    private static final Logger LOGGER = LoggerFactory.getLogger(ClientSpringConfigurator.class);

    @Override
    public void initialize(final ConfigurableApplicationContext applicationContext) {

        if (applicationContext instanceof XmlWebApplicationContext) {

            String[] locs = ((ConfigurableWebApplicationContext) applicationContext).getConfigLocations();
            String[] newLocs = Arrays.copyOf(locs, locs.length + 1);

            newLocs[locs.length] = "classpath:mna-client-context.xml";

            ((ConfigurableWebApplicationContext) applicationContext).setConfigLocations(newLocs);
        } else {

            XmlBeanDefinitionReader xmlReader = new XmlBeanDefinitionReader((BeanDefinitionRegistry) applicationContext);
            xmlReader.loadBeanDefinitions(new ClassPathResource("mna-client-context.xml"));
        }

    }

    /**
     * {@inheritDoc}
     * 
     * @return 2 so that m&a is loaded after program management
     */
    @Override
    public int getOrder() {

        return 2;
    }

}
