/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.mna.client.init;

import org.opentestsystem.shared.mna.client.aop.LoggingAdvice;
import org.opentestsystem.shared.mna.client.aop.MnaClientLoggingAdvice;
import org.opentestsystem.shared.mna.client.logging.MonitoringAlertingAppender;
import org.opentestsystem.shared.mna.client.service.AlertBeacon;
import org.opentestsystem.shared.mna.client.service.LogClient;
import org.opentestsystem.shared.mna.client.service.MetricClient;
import org.opentestsystem.shared.mna.client.service.MnaAlertBeacon;
import org.opentestsystem.shared.mna.client.service.MnaLogClient;
import org.opentestsystem.shared.mna.client.service.MnaMetricClient;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean;
import org.springframework.security.oauth2.client.OAuth2RestTemplate;
import org.springframework.security.oauth2.client.resource.OAuth2ProtectedResourceDetails;
import org.springframework.security.oauth2.client.token.grant.client.ClientCredentialsResourceDetails;
import org.springframework.security.oauth2.common.AuthenticationScheme;
import org.springframework.web.client.RestOperations;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.datatype.joda.JodaModule;

@Configuration
@Profile("mna.client.integration")
public class MnaIntegrationClientConfig {

    @Value("${oauth.access.url:}")
    private String accessTokenUrl = "";
    
    @Value("${mna.oauth.client.id:}")
    private String clientId = "";
    
    @Value("${mna.oauth.client.secret:}")
    private String clientSecret = "";

    @Bean
    public HttpComponentsClientHttpRequestFactory tibClientRequestFactory() {
        return new HttpComponentsClientHttpRequestFactory();
    }

    @Bean
    public OAuth2ProtectedResourceDetails mnaResource() {
        final ClientCredentialsResourceDetails resourceDetails = new ClientCredentialsResourceDetails();
        resourceDetails.setClientId(clientId);
        resourceDetails.setClientSecret(clientSecret);
        resourceDetails.setAccessTokenUri(accessTokenUrl);
        resourceDetails.setClientAuthenticationScheme(AuthenticationScheme.form);
        return resourceDetails;
    }
    
    @Bean
    public RestOperations mnaRestTemplate() {
        return new OAuth2RestTemplate(mnaResource());
    }
      
      
    @Bean
    public String mnaInitClassName() {
        return "org.opentestsystem.shared.mna.client.listener.InitMnaIntegrationListeners";
    }

    @Bean
    public LoggingAdvice mnaClientLoggingAdvice() {
        return new MnaClientLoggingAdvice(); // autowires a MetricClient
    }

    @Bean
    public MonitoringAlertingAppender monitoringAlertingAppender() {
        return new MonitoringAlertingAppender(); // autowires LogClient
    }

    // Project using the MnA client needs to define a bean for the MnaRegistration domain object in order for
    // registration to work,
    // Also needs to define a bean for MnaMetricRegistration,
    // See TIB for a examples

    // all clients autowire RestTemplate, mnaUri, mnaServerName, mnaNodeName, optional MnaBase

    @Bean
    public AlertBeacon mnaAlertBeacon() {
        return new MnaAlertBeacon();
    }

    @Bean
    public MetricClient mnaMetricClient() {
        return new MnaMetricClient();
    }

    @Bean
    public LogClient mnaLogClient() {
        return new MnaLogClient();
    }

    @Bean
    public ObjectMapper mnaObjectMapper() {
        final Jackson2ObjectMapperFactoryBean omfb = new Jackson2ObjectMapperFactoryBean();
        omfb.setIndentOutput(true);
        omfb.setSimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
        omfb.afterPropertiesSet();

        final ObjectMapper mapper = omfb.getObject();
        mapper.registerModule(new JodaModule());

        return mapper;
    }

}
